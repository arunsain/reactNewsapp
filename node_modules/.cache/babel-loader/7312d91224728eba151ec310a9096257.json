{"ast":null,"code":"var _jsxFileName = \"/home/arun/Desktop/functionNewsApp/src/components/News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport NewsItems from './NewsItems';\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst News = props => {\n  _s();\n\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n\n  const capitalize = str => {\n    const lower = str.toLowerCase();\n    return str.charAt(0).toUpperCase() + lower.slice(1);\n  };\n\n  document.title = `${capitalize(props.category)} - News app`;\n\n  const updateNews = async () => {\n    props.setProgress(10);\n    setPage(true);\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.setCountry}&category=${props.category}&apiKey=${this.props.newsKey}&page=${page}&pageSize=${props.pageSize}`;\n    props.setProgress(50);\n    let data = await fetch(url);\n    let parseData = await data.json();\n    props.setProgress(70);\n    setArticles(parseData.articles);\n    setTotalResults(parseData.totalResults);\n    setLoading(false);\n    props.setProgress(100);\n  };\n\n  const fetchMoreData = async () => {\n    setPage(page + 1);\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.setCountry}&category=${props.category}&apiKey=${props.newsKey}&page=${page}&pageSize=${props.pageSize}`;\n    let data = await fetch(url);\n    let parseData = await data.json();\n    setArticles(articles.concat(parseData.articles));\n    setTotalResults(parseData.totalResults);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    updateNews();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: [\"News App Top \", capitalize(props.category), \" Headlines\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: articles.length,\n        next: fetchMoreData,\n        hasMore: articles.length != totalResults,\n        loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: articles.map((element, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-4 my-5\",\n                children: /*#__PURE__*/_jsxDEV(NewsItems, {\n                  source: element.source.name,\n                  author: element.author,\n                  publishedAt: element.publishedAt,\n                  title: element.title,\n                  description: element.description,\n                  urlToImage: element.urlToImage,\n                  url: element.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 13\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(News, \"DJGT5z9fcO00SGn/4yt1PHL84Ps=\");\n\n_c = News;\nNews.defaultProps = {\n  'country': \"in\",\n  'pageSize': 6,\n  'newsKey': \"6ebc2a61e4214ddebacf3db11107688e\",\n  'category': 'general'\n};\nNews.propTypes = {\n  'country': PropTypes.string,\n  'pageSize': PropTypes.number,\n  'newsKey': PropTypes.string,\n  'category': PropTypes.string\n};\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["/home/arun/Desktop/functionNewsApp/src/components/News.js"],"names":["React","useState","useEffect","NewsItems","Spinner","PropTypes","InfiniteScroll","News","props","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalize","str","lower","toLowerCase","charAt","toUpperCase","slice","document","title","category","updateNews","setProgress","url","setCountry","newsKey","pageSize","data","fetch","parseData","json","fetchMoreData","concat","length","map","element","index","source","name","author","publishedAt","description","urlToImage","defaultProps","propTypes","string","number"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport NewsItems from './NewsItems'\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nconst News = (props) => {\n    \n  const [articles, setArticles] = useState([]);\n   const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(1);\n     const [totalResults, setTotalResults] = useState(0);\n\n\n\n    const capitalize = (str) => {\n  const lower = str.toLowerCase();\n  return str.charAt(0).toUpperCase() + lower.slice(1);\n}\n\n      \n        document.title = `${ capitalize(props.category)} - News app`;\n       \n    \n\n  const updateNews =  async () => {\n        props.setProgress(10);\n         setPage(true);\n        let url = `https://newsapi.org/v2/top-headlines?country=${props.setCountry}&category=${props.category}&apiKey=${ this.props.newsKey}&page=${page}&pageSize=${props.pageSize}`;\n         props.setProgress(50);\n        let data = await fetch(url);\n        let parseData = await data.json();\n        props.setProgress(70);\n        setArticles(parseData.articles);\n        setTotalResults(parseData.totalResults);\n        setLoading(false);\n       \n        \n          props.setProgress(100);\n    }\n\n\n   const  fetchMoreData = async () =>{\n       \n        setPage(page+1);\n \n\n        let url = `https://newsapi.org/v2/top-headlines?country=${props.setCountry}&category=${props.category}&apiKey=${props.newsKey}&page=${page}&pageSize=${props.pageSize}`;\n        let data = await fetch(url);\n        let parseData = await data.json();\n        setArticles(articles.concat(parseData.articles));\n        setTotalResults(parseData.totalResults);\n         setLoading(false);\n       \n    }\n\n    useEffect(() => {\n    updateNews();\n  },[]);\n\n    \n\n   \n        \n   \n        return (\n           <>\n            <div>\n            <h1 className=\"text-center\">News App Top {capitalize(props.category)} Headlines</h1>\n             { loading && <Spinner/>}  \n           \n             <InfiniteScroll\n                dataLength={articles.length}\n                next={fetchMoreData}\n                hasMore={articles.length != totalResults}\n                loader={<Spinner/>}\n              \n              >\n   <div className=\"container mt-5\">\n        <div className=\"row\">\n        \n        {articles.map((element,index)=>{\n           \n           return <div className=\"col-4 my-5\" key={index}>\n            <NewsItems source={element.source.name} author={element.author} publishedAt={element.publishedAt} title={element.title} description={element.description} urlToImage={element.urlToImage} url={element.url}/>\n        </div>\n\n        })}\n            \n          </div>\n                </div>\n                     </InfiniteScroll>\n\n\n              \n\n              \n             \n            </div>\n            </>\n        );\n      \n      }\n\n   News.defaultProps = {\n            'country' : \"in\",\n            'pageSize' : 6,\n            'newsKey'  :\"6ebc2a61e4214ddebacf3db11107688e\",\n            'category' : 'general', \n    }\n    News.propTypes = {\n             'country' : PropTypes.string,\n            'pageSize' : PropTypes.number,\n            'newsKey': PropTypes.string,\n            'category' : PropTypes.string\n    }\n\nexport default News\n"]},"metadata":{},"sourceType":"module"}